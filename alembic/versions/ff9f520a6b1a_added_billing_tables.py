"""added billing tables

Revision ID: ff9f520a6b1a
Revises: 1a376f67d25a
Create Date: 2025-08-21 10:33:19.545304

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff9f520a6b1a'
down_revision: Union[str, Sequence[str], None] = '1a376f67d25a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('billing_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('interval', sa.String(length=20), nullable=True),
    sa.Column('trial_days', sa.Integer(), nullable=True),
    sa.Column('messages_limit', sa.Integer(), nullable=False),
    sa.Column('stores_limit', sa.Integer(), nullable=True),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('test', sa.Boolean(), nullable=True),
    sa.Column('capped_amount', sa.Float(), nullable=True),
    sa.Column('terms', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('billing_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('store_id', sa.UUID(), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('shopify_charge_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.Column('response_data', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['store_id'], ['shopify_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('store_subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('store_id', sa.UUID(), nullable=True),
    sa.Column('plan_id', sa.UUID(), nullable=True),
    sa.Column('shopify_charge_id', sa.String(length=255), nullable=True),
    sa.Column('shopify_recurring_charge_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('messages_used', sa.Integer(), nullable=True),
    sa.Column('messages_reset_at', sa.DateTime(), nullable=True),
    sa.Column('confirmation_url', sa.Text(), nullable=True),
    sa.Column('last_payment_at', sa.DateTime(), nullable=True),
    sa.Column('next_billing_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['billing_plans.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['shopify_stores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shopify_charge_id'),
    sa.UniqueConstraint('shopify_recurring_charge_id')
    )
    op.create_table('usage_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('subscription_id', sa.UUID(), nullable=True),
    sa.Column('record_type', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.String(length=50), nullable=True),
    sa.Column('message_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['store_subscriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usage_records')
    op.drop_table('store_subscriptions')
    op.drop_table('billing_events')
    op.drop_table('billing_plans')
    # ### end Alembic commands ###
